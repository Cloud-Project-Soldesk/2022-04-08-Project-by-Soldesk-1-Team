# Create Bastion SG
resource "aws_security_group" "Bastion_Security" {
  name = "Bastion_Security"
  description = "Bastion_Security"
  vpc_id = aws_vpc.Test_Project_VPC.id
  tags =  {
    Name = "Bastion_Security"
   }
  ingress {
    from_port = 22
    to_port = 22
    protocol = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
    description = "SSH"
  }
}

# Create WebServer SG
resource "aws_security_group" "Web_Server_Security" {
  name = "Web_Server_Security"
  description = "Web_Server_Security"
  vpc_id = aws_vpc.Test_Project_VPC.id
  tags =  {
    Name = "Web_Server_Security"
   }
  ingress {
    from_port = 22
    to_port = 22
    protocol = "tcp"
    security_groups = [ aws_security_group.Bastion_Security.id]
    description = "SSH"
  }
  ingress {
    from_port = 80
    to_port = 80
    protocol = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
    description = "HTTP"
  }
  ingress {
    from_port = -1
    to_port = -1
    protocol = "icmp"
    security_groups = [ aws_security_group.Bastion_Security.id]
    description = "Ping test"
  }
  ingress {
    from_port = 443
    to_port = 443
    protocol = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
    description = "HTTPS"
  }
}


# Create Database SG
resource "aws_security_group" "DB_Security" {
  name = "DB_Security"
  description = "DB_Security"
  vpc_id = aws_vpc.Test_Project_VPC.id
  tags = {
    Name = "DB_Security"
  }
  ingress {
    from_port = 3306
    to_port = 3306
    protocol = "tcp"
    security_groups = [ aws_security_group.Bastion_Security.id]
    description = "Bastion Host"
  }
  ingress {
    from_port = 3306
    to_port = 3306
    protocol = "tcp"
    security_groups = [ aws_security_group.Web_Server_Security.id]
    description = "WebServer Host"
  }
}


# Create ApplicationServer SG

resource "aws_security_group" "App_Server_Security" {
  name = "App_Server_Security"
  description = "App_Server_Security"
  vpc_id = aws_vpc.Test_Project_VPC.id
  tags =  {
    Name = "App_Server_Security"
   }
  ingress {
    from_port = 22
    to_port = 22
    protocol = "tcp"
    security_groups = [ aws_security_group.Bastion_Security.id]
    description = "SSH"
  }
}

# Create ALB SG

resource "aws_security_group" "ALB_Security" {
  name = "ALB_Security"
  description = "ALB_Security"
  vpc_id = aws_vpc.Test_Project_VPC.id
  tags =  {
    Name = "ALB_Security"
   }
  ingress {
    from_port = 22
    to_port = 22
    protocol = "tcp"
    security_groups = [ aws_security_group.Bastion_Security.id]
    description = "SSH"
  }
  ingress {
    from_port = 80
    to_port = 80
    protocol = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
    description = "HTTP"
  }
  ingress {
    from_port = -1
    to_port = -1
    protocol = "icmp"
    security_groups = [ aws_security_group.Bastion_Security.id]
    description = "Ping test"
  }
  ingress {
    from_port = 443
    to_port = 443
    protocol = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
    description = "HTTPS"
  }
}